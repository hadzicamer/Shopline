[{"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\index.js":"1","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\store.js":"2","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\App.js":"3","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\cartReducers.js":"4","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Header.js":"6","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\CartScreen.js":"8","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Product.js":"11","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Loader.js":"12","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Message.js":"13","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Rating.js":"14","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\cartConst.js":"15","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\productConst.js":"16","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\cartActions.js":"17","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\productActions.js":"18","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\userReducers.js":"19","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\userConst.js":"20","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\LoginScreen.js":"21","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\FormContainer.js":"22","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\orderReducers.js":"30","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\orderActions.js":"31","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\orderConst.js":"32","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\OrderScreen.js":"33"},{"size":312,"mtime":1612965952688,"results":"34","hashOfConfig":"35"},{"size":1625,"mtime":1613572097402,"results":"36","hashOfConfig":"35"},{"size":1524,"mtime":1613500216101,"results":"37","hashOfConfig":"35"},{"size":1157,"mtime":1613250323978,"results":"38","hashOfConfig":"35"},{"size":1035,"mtime":1612911049747,"results":"39","hashOfConfig":"35"},{"size":1291,"mtime":1613140296920,"results":"40","hashOfConfig":"35"},{"size":328,"mtime":1612465262202,"results":"41","hashOfConfig":"35"},{"size":2983,"mtime":1613146382569,"results":"42","hashOfConfig":"35"},{"size":3464,"mtime":1612966696012,"results":"43","hashOfConfig":"35"},{"size":1007,"mtime":1612910662652,"results":"44","hashOfConfig":"35"},{"size":768,"mtime":1612969152384,"results":"45","hashOfConfig":"35"},{"size":411,"mtime":1612910496251,"results":"46","hashOfConfig":"35"},{"size":255,"mtime":1612910590907,"results":"47","hashOfConfig":"35"},{"size":1730,"mtime":1612484815073,"results":"48","hashOfConfig":"35"},{"size":232,"mtime":1613227659447,"results":"49","hashOfConfig":"35"},{"size":356,"mtime":1612910903358,"results":"50","hashOfConfig":"35"},{"size":1270,"mtime":1613250315054,"results":"51","hashOfConfig":"35"},{"size":1261,"mtime":1612911196671,"results":"52","hashOfConfig":"35"},{"size":2055,"mtime":1613573513996,"results":"53","hashOfConfig":"35"},{"size":814,"mtime":1613573209380,"results":"54","hashOfConfig":"35"},{"size":2128,"mtime":1613076839849,"results":"55","hashOfConfig":"35"},{"size":352,"mtime":1613076529910,"results":"56","hashOfConfig":"35"},{"size":3752,"mtime":1613573323240,"results":"57","hashOfConfig":"35"},{"size":3125,"mtime":1613145736413,"results":"58","hashOfConfig":"35"},{"size":5415,"mtime":1613573039448,"results":"59","hashOfConfig":"35"},{"size":2569,"mtime":1613227335879,"results":"60","hashOfConfig":"35"},{"size":1028,"mtime":1613227051064,"results":"61","hashOfConfig":"35"},{"size":1435,"mtime":1613250609703,"results":"62","hashOfConfig":"35"},{"size":5085,"mtime":1613494802479,"results":"63","hashOfConfig":"35"},{"size":2443,"mtime":1613573454064,"results":"64","hashOfConfig":"35"},{"size":3512,"mtime":1613572879661,"results":"65","hashOfConfig":"35"},{"size":774,"mtime":1613573148897,"results":"66","hashOfConfig":"35"},{"size":6059,"mtime":1613517658488,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"cv0th2",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\index.js",[],["138","139"],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\store.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\App.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\CartScreen.js",["140"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { addToCart,removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeCartHandler=(id)=>{\r\n      dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler=()=>{\r\n      history.push('/login?redirect=shipping')\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n<h1>Shopping cart</h1>\r\n{cartItems.length===0?<Message>Cart is empty <Link to='/'>Go back</Link></Message>:(\r\n    <ListGroup variant='flush'>\r\n{cartItems.map(item=>(\r\n    <ListGroupItem key={item.product}>\r\n        <Row>\r\n            <Col md={2}>\r\n                <Image src={item.image} alt={item.name} fluid rounded/>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n            </Col>\r\n            <Col md={2}>\r\n                ${item.price}\r\n            </Col>\r\n            <Col md={2}>\r\n            <FormControl as='select' value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                             {\r\n                             [...Array(item.countInStock).keys()].map(x=>(\r\n                                 <option key={x+1} value={x+1}>\r\n                                     {x+1}\r\n                                 </option>\r\n                             ))\r\n}\r\n                         </FormControl>\r\n            </Col>\r\n            <Col md={2}>\r\n                <Button type='button' variant='light' onClick={()=>removeCartHandler(item.product)}>\r\n                    <i className='fas fa-trash'></i>\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n    </ListGroupItem>\r\n))}\r\n    </ListGroup>\r\n)}\r\n      </Col>\r\n      <Col md={4}>\r\n<Card>\r\n    <ListGroup variant='flush'>\r\n        <ListGroupItem>\r\n            <h2>Subtotal ({cartItems.reduce((acc,cur)=>acc+cur.qty,0)})items</h2>\r\n            ${cartItems.reduce((acc,cur)=>acc+cur.qty*cur.price,0).toFixed(2)}\r\n        </ListGroupItem>\r\n        <ListGroupItem>\r\n            <Button type='button' className='btn-block' disabled={cartItems.length===0}onClick={checkoutHandler}>\r\n                Proceed to checkout\r\n            </Button>\r\n        </ListGroupItem>\r\n    </ListGroup>\r\n</Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\cartConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\productConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\userConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\userActions.js",["141"],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProfileScreen.js",["142"],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PlaceOrderScreen.js",["143"],"import React, {useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n  const dispatch = useDispatch();\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  const cart = useSelector((state) => state.cart);\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 50 ? 0 : 50);\r\n  cart.taxPrice = addDecimals(Number((0.17 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate=useSelector(state=>state.orderCreate)\r\n  const {order,success,error}=orderCreate\r\n  useEffect(()=>{\r\n      if(success){\r\n          history.push(`order/${order._id}`)\r\n      }\r\n  },[history,success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(createOrder({\r\n        orderItems:cart.cartItems,\r\n        shippingAddress:cart.shippingAddress,\r\n        payment:cart.payment,\r\n        itemsPrice:cart.itemsPrice,\r\n        shippingPrice:cart.shippingPrice,\r\n        taxPrice:cart.taxPrice,\r\n        totalPrice:cart.totalPrice\r\n    }))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroupItem>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <h2>Payment method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.payment}\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.naem}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price}=${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroupItem>\r\n                <h2>Order summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                  {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place order\r\n                </Button>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\orderConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\OrderScreen.js",["144","145","146"],"import React, { useEffect,useState } from 'react';\r\nimport axios from 'axios'\r\nimport {PayPalButton} from 'react-paypal-button-v2'\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { Link } from 'react-router-dom';\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions';\r\nimport{ORDER_PAY_RESET} from '../constants/orderConst'\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id;\r\n  const[sdk,setSdk]=useState(false)\r\n  const dispatch = useDispatch();\r\n  \r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const {  loading:loadingPay, success:successPay } = orderPay;\r\nif(!loading){\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n}\r\n\r\n  useEffect(() => {\r\n    const addPayPal=async()=>{\r\n      const {data:clientId}=await axios.get('/api/config/paypal')\r\n      const script=document.createElement('script')\r\n      script.type='text/javascript'\r\n      script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async=true\r\n      script.onload=()=>{\r\n        setSdk(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n    if(!order || successPay){\r\n      dispatch({type:ORDER_PAY_RESET})\r\n    dispatch(getOrderDetails(orderId));\r\n    }else if(!order.isPaid){\r\n      if(!window.paypal){\r\n        addPayPal()\r\n      }\r\n      else \r\n      {setSdk=true}\r\n    }\r\n  }, [dispatch,orderId,successPay,order]);\r\n\r\n  const successPaymentHandler=(paymentResult)=>{\r\nconsole.log(paymentResult)\r\ndispatch(payOrder(orderId,paymentResult))\r\n  }\r\n\r\n  return loading ? \r\n    <Loader />\r\n  : error ?\r\n    <Message variant='danger'>{error}</Message>:<>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroupItem>\r\n              <h2>Shipping</h2>\r\n              <p><strong>Name: </strong>{order.user.name}</p>\r\n              <p>\r\n              <strong>Email: </strong>\r\n              <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered?<Message variant='success'>Delivered on{order.deliveredAt}</Message>:\r\n              <Message variant='danger'>Not delivered</Message>}\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <h2>Payment method</h2>\r\n              <p>\r\n              <strong>Method: </strong>\r\n              {order.payment}\r\n              </p>\r\n              {order.isPaid?<Message variant='success'>Paid on{order.paidAt}</Message>:\r\n              <Message variant='danger'>Not paid</Message>}\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.naem}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price}=${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroupItem>\r\n                <h2>Order summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              {!order.isPaid && (\r\n                <ListGroupItem>\r\n                  {loadingPay && <Loader></Loader>}\r\n                  {!sdk ? <Loader></Loader>:(\r\n                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}>\r\n\r\n                    </PayPalButton>\r\n                  )}\r\n                </ListGroupItem>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n} \r\n\r\nexport default OrderScreen;\r\n",{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":9,"column":3,"nodeType":"153","messageId":"154","endLine":9,"endColumn":7},{"ruleId":"151","severity":1,"message":"155","line":4,"column":10,"nodeType":"153","messageId":"154","endLine":4,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":51,"column":6,"nodeType":"158","endLine":51,"endColumn":31,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":40,"column":5,"nodeType":"158","endLine":40,"endColumn":22,"suggestions":"161"},{"ruleId":"151","severity":1,"message":"162","line":5,"column":3,"nodeType":"153","messageId":"154","endLine":5,"endColumn":9},{"ruleId":"163","severity":1,"message":"164","line":59,"column":8,"nodeType":"153","messageId":"165","endLine":59,"endColumn":14},{"ruleId":"156","severity":1,"message":"166","line":59,"column":15,"nodeType":"167","endLine":59,"endColumn":19},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'get' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["170"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["171"],"'Button' is defined but never used.","no-const-assign","'setSdk' is constant.","const","Assignments to the 'setSdk' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [history, userInfo, user, dispatch]",{"range":"176","text":"177"},"Update the dependencies array to be: [history, order._id, success]",{"range":"178","text":"179"},[1594,1619],"[history, userInfo, user, dispatch]",[1235,1252],"[history, order._id, success]"]