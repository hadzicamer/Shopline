[{"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\index.js":"1","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\store.js":"2","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\App.js":"3","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\cartReducers.js":"4","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\productReducers.js":"5","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Header.js":"6","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\CartScreen.js":"8","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductScreen.js":"9","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\HomeScreen.js":"10","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Product.js":"11","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Loader.js":"12","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Message.js":"13","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Rating.js":"14","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\cartConst.js":"15","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\productConst.js":"16","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\cartActions.js":"17","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\productActions.js":"18","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\userReducers.js":"19","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\userConst.js":"20","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\LoginScreen.js":"21","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\FormContainer.js":"22","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\RegisterScreen.js":"24","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProfileScreen.js":"25","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PaymentScreen.js":"28","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\orderReducers.js":"30","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\orderActions.js":"31","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\orderConst.js":"32","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\OrderScreen.js":"33","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\UserListScreen.js":"34","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductListScreen.js":"36","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductEditScreen.js":"37","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\OrderListScreen.js":"38"},{"size":312,"mtime":1612965952688,"results":"39","hashOfConfig":"40"},{"size":2087,"mtime":1613933760641,"results":"41","hashOfConfig":"40"},{"size":2170,"mtime":1613926854669,"results":"42","hashOfConfig":"40"},{"size":1157,"mtime":1613250323978,"results":"43","hashOfConfig":"40"},{"size":2651,"mtime":1613860340811,"results":"44","hashOfConfig":"40"},{"size":2275,"mtime":1613752634951,"results":"45","hashOfConfig":"40"},{"size":328,"mtime":1612465262202,"results":"46","hashOfConfig":"40"},{"size":2983,"mtime":1613146382569,"results":"47","hashOfConfig":"40"},{"size":3464,"mtime":1612966696012,"results":"48","hashOfConfig":"40"},{"size":1007,"mtime":1612910662652,"results":"49","hashOfConfig":"40"},{"size":768,"mtime":1612969152384,"results":"50","hashOfConfig":"40"},{"size":411,"mtime":1612910496251,"results":"51","hashOfConfig":"40"},{"size":255,"mtime":1612910590907,"results":"52","hashOfConfig":"40"},{"size":1730,"mtime":1612484815073,"results":"53","hashOfConfig":"40"},{"size":232,"mtime":1613227659447,"results":"54","hashOfConfig":"40"},{"size":1018,"mtime":1613860291005,"results":"55","hashOfConfig":"40"},{"size":1270,"mtime":1613250315054,"results":"56","hashOfConfig":"40"},{"size":3834,"mtime":1613860857548,"results":"57","hashOfConfig":"40"},{"size":3497,"mtime":1613925976100,"results":"58","hashOfConfig":"40"},{"size":1420,"mtime":1613925897929,"results":"59","hashOfConfig":"40"},{"size":2128,"mtime":1613076839849,"results":"60","hashOfConfig":"40"},{"size":352,"mtime":1613076529910,"results":"61","hashOfConfig":"40"},{"size":6104,"mtime":1613925934304,"results":"62","hashOfConfig":"40"},{"size":3125,"mtime":1613145736413,"results":"63","hashOfConfig":"40"},{"size":5415,"mtime":1613573039448,"results":"64","hashOfConfig":"40"},{"size":2569,"mtime":1613227335879,"results":"65","hashOfConfig":"40"},{"size":1028,"mtime":1613227051064,"results":"66","hashOfConfig":"40"},{"size":1435,"mtime":1613250609703,"results":"67","hashOfConfig":"40"},{"size":5085,"mtime":1613494802479,"results":"68","hashOfConfig":"40"},{"size":3606,"mtime":1613933707383,"results":"69","hashOfConfig":"40"},{"size":5175,"mtime":1613933897303,"results":"70","hashOfConfig":"40"},{"size":1165,"mtime":1613933687910,"results":"71","hashOfConfig":"40"},{"size":7466,"mtime":1613934560636,"results":"72","hashOfConfig":"40"},{"size":2741,"mtime":1613741355879,"results":"73","hashOfConfig":"40"},{"size":3001,"mtime":1613743324175,"results":"74","hashOfConfig":"40"},{"size":3705,"mtime":1613859449136,"results":"75","hashOfConfig":"40"},{"size":5701,"mtime":1613925326699,"results":"76","hashOfConfig":"40"},{"size":2680,"mtime":1613926943316,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"cv0th2",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\index.js",[],["159","160"],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\store.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\App.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\CartScreen.js",["161"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  Form,\r\n  FormControl,\r\n  Image,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n} from 'react-bootstrap';\r\nimport { addToCart,removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeCartHandler=(id)=>{\r\n      dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler=()=>{\r\n      history.push('/login?redirect=shipping')\r\n  }\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n<h1>Shopping cart</h1>\r\n{cartItems.length===0?<Message>Cart is empty <Link to='/'>Go back</Link></Message>:(\r\n    <ListGroup variant='flush'>\r\n{cartItems.map(item=>(\r\n    <ListGroupItem key={item.product}>\r\n        <Row>\r\n            <Col md={2}>\r\n                <Image src={item.image} alt={item.name} fluid rounded/>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n            </Col>\r\n            <Col md={2}>\r\n                ${item.price}\r\n            </Col>\r\n            <Col md={2}>\r\n            <FormControl as='select' value={item.qty} onChange={(e)=>dispatch(addToCart(item.product,Number(e.target.value)))}>\r\n                             {\r\n                             [...Array(item.countInStock).keys()].map(x=>(\r\n                                 <option key={x+1} value={x+1}>\r\n                                     {x+1}\r\n                                 </option>\r\n                             ))\r\n}\r\n                         </FormControl>\r\n            </Col>\r\n            <Col md={2}>\r\n                <Button type='button' variant='light' onClick={()=>removeCartHandler(item.product)}>\r\n                    <i className='fas fa-trash'></i>\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n\r\n    </ListGroupItem>\r\n))}\r\n    </ListGroup>\r\n)}\r\n      </Col>\r\n      <Col md={4}>\r\n<Card>\r\n    <ListGroup variant='flush'>\r\n        <ListGroupItem>\r\n            <h2>Subtotal ({cartItems.reduce((acc,cur)=>acc+cur.qty,0)})items</h2>\r\n            ${cartItems.reduce((acc,cur)=>acc+cur.qty*cur.price,0).toFixed(2)}\r\n        </ListGroupItem>\r\n        <ListGroupItem>\r\n            <Button type='button' className='btn-block' disabled={cartItems.length===0}onClick={checkoutHandler}>\r\n                Proceed to checkout\r\n            </Button>\r\n        </ListGroupItem>\r\n    </ListGroup>\r\n</Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\cartConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\productConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\userConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProfileScreen.js",["162"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  Table,\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getDetails, updateUser } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { success } = userUpdate;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [history, userInfo, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) setMessage('Passwords do not match');\r\n    else {\r\n      dispatch(updateUser({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>My profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile updated</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <FormGroup controlId='name'>\r\n            <FormLabel>Name</FormLabel>\r\n            <FormControl\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></FormControl>\r\n          </FormGroup>\r\n          <FormGroup controlId='email'>\r\n            <FormLabel>Email adress</FormLabel>\r\n            <FormControl\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></FormControl>\r\n          </FormGroup>\r\n\r\n          <FormGroup controlId='password'>\r\n            <FormLabel>Password</FormLabel>\r\n            <FormControl\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></FormControl>\r\n          </FormGroup>\r\n          <FormGroup controlId='confirmPassword'>\r\n            <FormLabel>Confirm password</FormLabel>\r\n            <FormControl\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></FormControl>\r\n          </FormGroup>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader></Loader>\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color:'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button variant='light'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\PlaceOrderScreen.js",["163"],"import React, {useEffect } from 'react';\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  ListGroupItem,\r\n} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n  const dispatch = useDispatch();\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n  const cart = useSelector((state) => state.cart);\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 50 ? 0 : 50);\r\n  cart.taxPrice = addDecimals(Number((0.17 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate=useSelector(state=>state.orderCreate)\r\n  const {order,success,error}=orderCreate\r\n  useEffect(()=>{\r\n      if(success){\r\n          history.push(`order/${order._id}`)\r\n      }\r\n  },[history,success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(createOrder({\r\n        orderItems:cart.cartItems,\r\n        shippingAddress:cart.shippingAddress,\r\n        payment:cart.payment,\r\n        itemsPrice:cart.itemsPrice,\r\n        shippingPrice:cart.shippingPrice,\r\n        taxPrice:cart.taxPrice,\r\n        totalPrice:cart.totalPrice\r\n    }))\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroupItem>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n              <h2>Payment method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.payment}\r\n            </ListGroupItem>\r\n\r\n            <ListGroupItem>\r\n              <h2>Order items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroupItem key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.naem}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price}=${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroupItem>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroupItem>\r\n                <h2>Order summary</h2>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                  {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroupItem>\r\n              <ListGroupItem>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place order\r\n                </Button>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\constants\\orderConst.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\OrderScreen.js",["164","165"],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\UserEditScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\ProductEditScreen.js",["166"],"import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, FormGroup, FormLabel, FormControl, FormCheck, FormFile } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {listProductDetails,updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConst';\r\n\r\nconst ProductEditScreen = ({match,history}) => {\r\n  const productId=match.params.id\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n\r\n  const dispatch=useDispatch()\r\n  const productDetails=useSelector(state=>state.productDetails)\r\n  const{loading,error,product}=productDetails\r\n\r\n  const productUpdate=useSelector(state=>state.productUpdate)\r\n  const{loading:loadingUpdate,error:errorUpdate,success:successUpdate}=productUpdate\r\n\r\n  useEffect(() => {\r\n      if(successUpdate){\r\n          dispatch({type:PRODUCT_UPDATE_RESET})\r\n          history.push('/admin/productList')\r\n      }else{\r\n          if(!product.name || product._id!==productId){\r\n              dispatch(listProductDetails(productId))\r\n          }else{\r\n              setName(product.name)\r\n              setPrice(product.price) \r\n              setImage(product.image)\r\n              setBrand(product.brand)\r\n              setCategory(product.category)\r\n              setCountInStock(product.countInStock)\r\n              setDescription(product.description)\r\n          }\r\n      }\r\n  }, [dispatch,history,productId,product,successUpdate]);\r\n\r\n  const uploadFileHandler=async(e)=>{\r\n    const file=e.target.files[0]\r\n    const formData=new FormData()\r\n    formData.append('image',file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config={\r\n        headers:{\r\n          'Content-Type':'multipart/form-data'\r\n        }\r\n      }\r\n      const {data}=await axios.post('/api/upload',formData,config)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setUploading(false)\r\n    }\r\n\r\n  }\r\n\r\n  const submitHandler=(e)=>{\r\n      e.preventDefault()\r\n      dispatch(updateProduct({\r\n          _id:productId,\r\n          name,\r\n          price,\r\n          image,\r\n          brand,\r\n          category,\r\n          description,\r\n          countInStock\r\n      }))\r\n  }\r\n  return (\r\n      <>\r\n      <Link to='/admin/productList' className='btn btn-light my-3'>Go back</Link>\r\n    <FormContainer>\r\n      <h1>Edit product</h1>\r\n      {loadingUpdate && <Loader></Loader>}\r\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n      {loading ? <Loader></Loader>:error?<Message variant='danger'>{error}</Message>:(\r\n      <Form onSubmit={submitHandler}>\r\n      <FormGroup controlId='name'>\r\n          <FormLabel>Name</FormLabel>\r\n          <FormControl\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></FormControl>\r\n        </FormGroup>\r\n        <FormGroup controlId='price'>\r\n          <FormLabel>Price</FormLabel>\r\n          <FormControl\r\n            type='number'\r\n            placeholder='Enter price'\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n          ></FormControl>\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId='image'>\r\n        <FormLabel>Price</FormLabel>\r\n          <FormControl\r\n            type='text'\r\n            placeholder='Enter image url'\r\n            value={image}\r\n            onChange={(e) => setImage(e.target.value)}\r\n          ></FormControl>\r\n          <FormFile id='image-file' label='Choose file' custom onChange={uploadFileHandler}> \r\n          {uploading && <Loader/>}\r\n          </FormFile>\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId='brand'>\r\n        <FormLabel>Brand</FormLabel>\r\n          <FormControl\r\n            type='text'\r\n            placeholder='Enter brand'\r\n            value={brand}\r\n            onChange={(e) => setBrand(e.target.value)}\r\n          ></FormControl>\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId='countInStock'>\r\n        <FormLabel>Count in stock</FormLabel>\r\n          <FormControl\r\n            type='number'\r\n            placeholder='Enter count in stock'\r\n            value={countInStock}\r\n            onChange={(e) => setCountInStock(e.target.value)}\r\n          ></FormControl>\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId='category'>\r\n        <FormLabel>Category</FormLabel>\r\n          <FormControl\r\n            type='text'\r\n            placeholder='Enter category'\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          ></FormControl>\r\n        </FormGroup>\r\n\r\n        <FormGroup controlId='description'>\r\n        <FormLabel>Description</FormLabel>\r\n          <FormControl\r\n            type='text'\r\n            placeholder='Enter description'\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          ></FormControl>\r\n        </FormGroup>\r\n      \r\n        <Button type='submit' variant='primary'>Update</Button>\r\n      </Form>\r\n      )}\r\n    </FormContainer>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","C:\\Users\\Amer\\Desktop\\Shopline\\frontend\\src\\screens\\OrderListScreen.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":9,"column":3,"nodeType":"173","messageId":"174","endLine":9,"endColumn":7},{"ruleId":"175","severity":1,"message":"176","line":51,"column":6,"nodeType":"177","endLine":51,"endColumn":31,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":40,"column":5,"nodeType":"177","endLine":40,"endColumn":22,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":73,"column":9,"nodeType":"173","messageId":"183","endLine":73,"endColumn":15},{"ruleId":"175","severity":1,"message":"184","line":73,"column":18,"nodeType":"185","endLine":73,"endColumn":22},{"ruleId":"171","severity":1,"message":"186","line":4,"column":59,"nodeType":"173","messageId":"174","endLine":4,"endColumn":68},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["189"],"React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["190"],"no-const-assign","'setSdk' is constant.","const","Assignments to the 'setSdk' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","'FormCheck' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [history, userInfo, user, dispatch]",{"range":"195","text":"196"},"Update the dependencies array to be: [history, order._id, success]",{"range":"197","text":"198"},[1594,1619],"[history, userInfo, user, dispatch]",[1235,1252],"[history, order._id, success]"]